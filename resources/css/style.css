/* good practice right here */

/* 
Orange Color: #e67e22
*/

/* =============== BASIC SETUP =============== */

/* clearfix class */
.clearfix {
	zoom: 1;
}

.clearfix::after {
	content: "";
	clear: both;
	display: table;
}

/* .clearfix {
	content: ".";
	clear: both;
	display: block;
	height: 0;
	visibility: hidden;
} */

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

a:link,
a:visited {
	color: #e67e22;
	text-decoration: none;
	padding-bottom: 1px;
	border-bottom: 1px solid #e67e22;
	transition: border-bottom 0.2s, color 0.2s;
}

a:hover,
a:active {
	color: #555;
	border-bottom: 1px solid transparent;
}

/* this is where the google font will go! */
html {
	background: white;
	color: #555;
	font-family: "Lato", "Helvetica", sans-serif;
	font-size: 20px; /* base size, setting it FOR all devices */

	/* optimizes the render of text */
	text-rendering: optimizeLegibility;

	/* 300 coming from LATO, keep it consistent */
	font-weight: 300;
}

/* we need to do this to use the responsivegridsystem, use Flexbox */
/* .row just centers content */
.row {
	max-width: 1140px;
	margin: 0 auto; /* centers */
	/* border: 1px solid red; */
}

/* gets rid of whitespace */
h1 {
	/* 20px so it gives the spacing for the bottom, TOP RIGHT BOTTOM LEFT */
	margin: 0 auto 20px auto;
	color: white;

	/* use percentages for RELATIVE UNITS, keep in mind responsive design */
	font-size: 240%; /* or 40px */

	/* big font size? LOWER THE WEIGHT */
	font-weight: 300;

	/* turns all letters to uppercase */
	text-transform: uppercase;

	/* space between each LETTER */
	letter-spacing: 1px;

	/* space between each WORD */
	word-spacing: 3px;
}

/* =============== 1. HEADER =============== */

header {
	/* uses the photo!, you can then use the background props */
	/* linear-gradient() is a cool little trick, it's like using two images at the same time (i tried 2 imgs, doesnt work lol) */
	background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)),
		url(img/hero.jpg);

	/* viewport, but way too zoomed in */
	height: 100vh;
	/* width: auto; not needed */

	/* this fixes the image size + position */
	background-size: cover;
	background-position: center;

	background-attachment: fixed;
}

/* positioning the title and buttons! */
.hero-text-box {
	/* absolute = stays in this exact position NOT relative to parent component */
	position: absolute;

	/* width of element, needed for border box */
	width: 1140px;

	/* use % for relative units (mobile view support) */
	/* positioning for the hero text box */
	top: 50%;
	left: 50%;

	/* by using this hack, it will use the top + left values */
	/* transform takes into consideration the top + left values */
	/* negative value because we want the elements to go to the LEFT of where it was before */
	transform: translate(-50%, -50%); /* width | height */
}

/* =============== HEADER NAV =============== */

/* use Flexbox, space between logo & nav */
.logo {
	height: 100px;
	width: auto;
	float: left;
	margin-top: 20px;
}

.main-nav {
	margin-top: 50px;
	float: right;
	list-style: none; /* removes bullet points */
}

.main-nav li {
	display: inline-block;
	margin-left: 40px;
}

.main-nav li a:link,
.main-nav li a:visited {
	color: white;
	padding: 8px 0;
	text-decoration: none;
	text-transform: uppercase;
	font-size: 90%;
	border-bottom: 2px solid transparent; /* so it doesn't resize!! */
	transition: border-bottom 0.2s;
}

.main-nav li a:hover,
.main-nav li a:active {
	border-bottom: 2px solid #e67e22;
}

/* =============== HEADER BUTTON =============== */

/* creating a base for buttons */

/* psuedo-classes! 
:link
:visited
:active
:hover
*/

.btn:link,
.btn:visited {
	/* so we can give our buttons padding, border, and margin */
	/* EDIT: this works, it gives the inline elements padding + margin */
	display: inline-block;
	padding: 10px 30px;

	/* weight */
	font-weight: 300;

	/* gets rid of underline */
	text-decoration: none;

	/* roundness of button */
	border-radius: 200px;

	/* we can specify more than one element! */
	transition: background-color 0.2s, border 0.2s, color 0.2s;
}

/* we want visited to not show different colors */
.btn-full:link,
.btn-full:visited {
	background-color: #e67e22;
	color: white;

	/* reason there is a border here is so that it matches the size of btn-ghost */
	border: 1px solid #e67e22;

	/* creating space */
	margin-right: 15px;
}

.btn-ghost:link,
.btn-ghost:visited {
	border: 1px solid #e67e22;
	color: #e67e22;
}

.btn:hover,
.btn:active {
	border: 1px solid #e67e22;
	background-color: #cf6d17;
	color: white;
}

/* =============== 2. FEATURE =============== */

section {
	padding: 80px 0; /* only top and bottom! */

	/* Testing! Show's how it affects section
	background-color: turquoise; 
	margin: 100px; 
	 */
}

.section-steps {
	background-color: #f4f4f4;
	/* padding-top: 80px; */
	/* margin-top: 80px; */
}

.section-features {
}

.long-copy {
	line-height: 145%;
	width: 70%;

	margin: 30px auto; /* the whole element! */
	/* text-align: center; ** the content inside */

	/* tip:
	you can do 
	
	margin-left: 15%
	
	why 15? because 

	left: 15
	width: 70
	right: 15
	---------
		100%
	*/
}

.box {
	padding: 1%;
	/* background-color: #cf6d17; */
}

/* those <p> are inside the box! */
.box p {
	font-size: 90%;
	line-height: 145%;
}

h2 {
	text-transform: uppercase;
	letter-spacing: 1px;
	word-spacing: 2px;
	font-weight: 300;
	font-size: 180%;
	text-align: center;
	margin-bottom: 30px;
}

/* after h2 element! */
h2:after {
	display: block;
	height: 2px;
	background-color: #e67e22;
	content: ""; /* we do not want words in here so leave blank */
	width: 100px;

	/* 30px top, auto for left and right, 30px bottom */
	margin: 30px auto 30px;
}

h3 {
	text-transform: uppercase;
	word-spacing: 2px;
	font-weight: 300;
	font-size: 110%;
	margin-bottom: 15px;
	/* letter-spacing: 1px; ** with this it forces a line break! */
}

/* big icons! */
.icon-big {
	margin-bottom: 20px;
	font-size: 350%;
	color: #cf6d17;
	display: block;
}

/* =============== 3. Favorite Meals =============== */

/* white bottom border... bakit?! */

.section-meals {
	padding: 0;
	/* margin: 0; */
	/* height: 100vh; */
}

.meals-showcase {
	list-style: none;
	width: 100%;
}

.meals-showcase li {
	display: block;
	float: left;
	width: 25%;
}

.meal-photo {
	background: black;
	overflow: hidden; /* still overflowing, BUT no scroll */
	width: 100%;
	margin: 0; /* must do this because NORMALIZE CSS file overwrites some CSS props */
}

.meal-photo img {
	opacity: 0.7; /* background is white, so opacity will fade to white, we change to black .meal-photo */
	transform: scale(1.15); /* 115% big SO it overflows*/
	transition: transform 0.5s, opacity 0.5s;
	height: auto;
	width: 100%; /* this is the important piece! */
}

.meal-photo img:hover {
	opacity: 1;
	transform: scale(
		1.05
	); /* if 1, you can see white bottom border, so do 1.05! */
}

/* =============== 4. How it Works! =============== */

/* phone IMG */
.app-screen {
	height: auto;
	width: 40%;
}

.steps-box {
	margin-top: 30px; /* margin: 6px will disrupt grid flow!*/
}

/* first child of .steps-box, the PHONE IMAGE */
.steps-box:first-child {
	text-align: right;
	padding-right: 3%; /* layout prop? MUST be percentage for responsive web design */
}

/* second child! */
.steps-box:last-child {
	padding-left: 3%;
	margin-top: 70px;
}

.works-steps {
	margin-bottom: 50px;
}

.works-steps div {
	color: #e67e22;
	border: 3px solid #e67e22;
	border-radius: 50%; /* to make it into a circle! */

	/* equal measurements so it can be circle!! */
	height: 54px;
	width: 54px;

	text-align: center; /* centers the number but still above center line */

	padding: 5px; /* fixes number, now centered */

	/* since this is div, it will float LEFT of <p> */

	font-size: 150%;

	margin-right: 30px;

	float: left;
	/* 
	display: inline-block; so we can have padding + margin! 
	this was commented out because float:left nulls it
	*/
}

/* :last-of-type is similar to :last-child! */
.works-steps:last-of-type {
	margin-bottom: 80px;
}

/* i see YOU MUST specify the :link and :visited */
.button-app:link,
.button-app:visited {
	border: 0;
}

/* we're targeting img, if you do just .button-app, it will not work. */
.button-app img {
	height: 50px;
	margin-right: 10px;
}

/* =============== 5. Cities =============== */

.box img {
	width: 100%; /* 100% of the span-1-of-4!!  */
	margin-bottom: 15px;
}

.city-feature {
	margin-bottom: 10px;
}

.icon-small {
	/* border: 2px solid red; */
	display: inline-block;
	text-align: center;
	color: #e67e22;
	width: 30px;
	font-size: 120%;
	margin-right: 10px;

	/* 'secret' to aligning the icon VERTICALLY to the text */
	line-height: 120%;
	vertical-align: middle;
	margin-top: -5px;
}

/* =============== 5. Customer Testimonials =============== */

.section-testimonials {
	background-image: linear-gradient(rgb(0, 0, 0, 0.7), rgb(0, 0, 0, 0.8)),
		url(img/back-customers.jpg);

	background-size: cover;

	color: white;

	background-attachment: fixed;
}

blockquote:before {
	/* using glyphs! css-tricks.com + glyphs */
	content: "\201c";
	font-size: 400%;
	display: block;

	position: absolute; /* to use absolute, you MUST use position: relative in the parent container! */
	top: 5px;
	left: 0;
}

blockquote {
	position: relative;
	padding: 2%;
	font-style: italic;
	line-height: 145%;
}

cite {
	display: block;
	margin-top: 25px;
	/* font-size: 90%; */
	/* border: 2px solid red; */
}

cite img {
	border-radius: 50%;
	height: 50px;
	margin-right: 10px;
	vertical-align: middle;
}
